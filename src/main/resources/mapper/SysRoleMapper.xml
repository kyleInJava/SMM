<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kyle.base.role.dao.SysRoleMapper">
  <resultMap id="BaseResultMap" type="com.kyle.base.role.entity.SysRole">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="data_permission" jdbcType="INTEGER" property="dataPermission" />
    <result column="updater" jdbcType="INTEGER" property="updater" />
    <result column="udpate_time" jdbcType="TIMESTAMP" property="udpateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    sys_role.id, sys_role.code, sys_role.name, sys_role.note,sys_role.state,sys_role.data_permission, sys_role.updater, sys_role.udpate_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insertSelective" parameterType="com.kyle.base.role.entity.SysRole" useGeneratedKeys="true" keyProperty="id">
    insert into sys_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="dataPermission != null">
        data_permission,
      </if>
      <if test="updater != null">
        updater,
      </if>
      <if test="udpateTime != null">
        udpate_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="dataPermission != null">
        #{dataPermission,jdbcType=INTEGER},
      </if>
      <if test="updater != null">
        #{updater,jdbcType=INTEGER},
      </if>
      <if test="udpateTime != null">
        #{udpateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.kyle.base.role.entity.SysRole">
    update sys_role
    <set>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="dataPermission != null">
        data_permission = #{dataPermission,jdbcType=INTEGER},
      </if>
      <if test="updater != null">
        updater = #{updater,jdbcType=INTEGER},
      </if>
      <if test="udpateTime != null">
        udpate_time = #{udpateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="listSysRole" resultType="java.util.Map">
  	select 
    	sys_role.code,sys_role.name,sys_role.note,
    	case when sys_role.data_permission = 0 then '部门及其子部门' 
    		 when sys_role.data_permission = 1 then '当前部门' end as dataPermission,
    	case when sys_role.state = 1 then '已删除' when sys_role.state = 2 then '已禁用' else '正常' end as state,
    	sys_user.name as updater,
    	sys_role.udpate_time as updateTime
    from sys_role
    inner join sys_user on  sys_role.updater = sys_user.id
    where sys_role.state = 0
    <if test="condition != null and condition != ''">
    	and (name like #{condition} or code like condition)
    </if>
  </select>
  
  <select id="getRolesByUserId" parameterType="java.util.Map" resultMap="BaseResultMap">
  	select 
  	<include refid="Base_Column_List" />
  	from sys_role 
  	inner join sys_user_role sur on sur.role_id = sys_role.id
  	where sur.user_id = #{userId}
  </select>
  
  <!-- 插入角色和权限之间的关系 -->
  <insert id="insertRoleResource" parameterType="java.util.Map">
  	insert into sys_role_resource(role_id,resource_id)
  	values
  	<foreach collection="resources" item="resource_id" separator=",">
  		(#{role_id},#{resource_id})
  	</foreach>
  </insert>
  
  <!-- 根据角色id查询对应的资源信息 -->
  <select id="selectResourceByRoleId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
  	select sys_resource.id
  	from sys_role_resource
  	inner join sys_resource on sys_role_resource.resource_id = sys_resource.id
  	where sys_role_resource.role_id =#{roleId} 
  	and sys_resource.state = 0
  </select>
  
  <!-- 删除角色对应的资源权限 -->
  <delete id="deleteRoleResource" parameterType="java.util.Map">
  	delete from sys_role_resource where role_id = #{role_id}
  </delete>
  
  
</mapper>