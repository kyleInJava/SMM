<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kyle.base.user.dao.SysUserMapper">
  <resultMap id="BaseResultMap" type="com.kyle.base.user.entity.SysUser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="gender" jdbcType="INTEGER" property="gender" />
    <result column="dept" jdbcType="INTEGER" property="dept" />
    <result column="job" jdbcType="INTEGER" property="job" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="updater" jdbcType="INTEGER" property="updater" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, account, password, salt, name, age, gender, dept, job, state, updater, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insertSelective" parameterType="com.kyle.base.user.entity.SysUser" useGeneratedKeys="true" keyProperty="id">
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="dept != null">
        dept,
      </if>
      <if test="job != null">
        job,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="updater != null">
        updater,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="dept != null">
        #{dept,jdbcType=INTEGER},
      </if>
      <if test="job != null">
        #{job,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="updater != null">
        #{updater,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.kyle.base.user.entity.SysUser">
    update sys_user
    <set>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="dept != null">
        dept = #{dept,jdbcType=INTEGER},
      </if>
      <if test="job != null">
        job = #{job,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="updater != null">
        updater = #{updater,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- 查询用户列表 -->
  <select id="listUser" parameterType="java.util.Map" resultType="java.util.Map" >
  	SELECT su.name AS userName,su.age,
  	case when su.gender = 0 then '女' when su.gender = 1 then '男' else '未知' end as gender,
  	sd.name AS deptname,sj.name AS jobname,
  	case when su.state = 1 then '删除' when su.state = 2 then '禁用' else '正常' end as state,
  	su2.name as updater,
  	su.update_time as updateTime
  	
  	FROM sys_user su
	INNER JOIN sys_dept sd ON su.dept = sd.id
	INNER JOIN sys_job sj ON su.job = sj.id
	INNER JOIN sys_user as su2 ON su2.id = su.updater
	where 1=1
	<if test="name != null and name != ''">
		AND su.name  like concat('%', #{name} ,'%')	
	</if>
	<if test="deptid != null and deptid != ''">
		AND sd.parent_ids like concat('%','/', #{deptid} ,'/','%')
	</if>
	<if test="state != null and state != ''">
		AND su.state = #{state}
	</if>
	<if test="job != null and job != ''">
		AND su.job = #{job}
	</if>
  </select>
  
  <!-- 获取用户的基本信息 -->
  <select id="getUserBasicInfo" parameterType="java.util.Map" resultType="java.util.Map">
  	SELECT 
	  sys_user.id AS userId,sys_user.account,sys_user.name,sys_user.age,sys_user.gender,
	  sys_user.dept,sys_user.job,sys_dept.name AS deptname,sys_job.name AS jobname
	FROM 
	sys_user
	INNER JOIN sys_dept ON sys_dept.id = sys_user.id
	INNER JOIN sys_job ON sys_job.id = sys_user.job
	WHERE sys_user.id = #{userId}
  </select>
  
  <!-- 用户登录，通过账号来获取密码 -->
  <select id="getUserByAccount" parameterType="java.lang.String" resultMap="BaseResultMap">
  	select 
  		<include refid="Base_Column_List" />
  	from sys_user
  	where state = 0 and account = #{account}
  	
  </select>
</mapper>