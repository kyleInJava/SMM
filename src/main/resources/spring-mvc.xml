<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"   
    xsi:schemaLocation="http://www.springframework.org/schema/beans  
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
        http://www.springframework.org/schema/context  
        http://www.springframework.org/schema/context/spring-context-4.0.xsd  
        http://www.springframework.org/schema/mvc  
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">  


<!-- 开启注解扫描 -->
<mvc:annotation-driven>
	<mvc:message-converters register-defaults="true">
		<!-- 解决responsebody返回的字符串数据乱码问题,但是如果你是直接构造对象然后返回，则可以使用到下面的fastjson来进行转化 -->
      <!-- <bean class="org.springframework.http.converter.StringHttpMessageConverter">
        <property name="supportedMediaTypes" value="text/plain;charset=UTF-8"/>
      </bean> -->
      <!-- 使用fastjson来将返回的对象转化为json -->
      <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
        <property name="supportedMediaTypes">
          <list>
            <value>text/plain;charset=UTF-8</value>
            <value>application/json</value>
          </list>
        </property>
        <property name="fastJsonConfig" ref="fastJsonConfig"/>
      </bean>
    </mvc:message-converters>
</mvc:annotation-driven>

<!-- 用于解决fastjson转化对象为json时，忽略掉值为null的键 -->
<bean name="fastJsonConfig" class="com.alibaba.fastjson.support.config.FastJsonConfig">
	<property name="serializerFeatures">
		<list>
			<value>WriteMapNullValue</value>
			<value>WriteNullNumberAsZero</value>
			<value>WriteNullListAsEmpty</value>
			<value>WriteNullStringAsEmpty</value>
			<value>WriteNullBooleanAsFalse</value>
			<value>WriteDateUseDateFormat</value>
		</list>
	</property>
</bean>

<!-- 设置注解扫描的包 -->
<context:component-scan base-package="com.kyle.*.*.controller">
   <!-- 可以设置扫描哪些包或者注解 -->
   <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
</context:component-scan>

<!-- 激活代理功能，实现全局日志，
之所以在这个配置文件中配置是因为springmvc的子容器能够获取父容器中的 对象，反过来却不行。
-->
<aop:aspectj-autoproxy/> 

<!-- 配置自定义的拦截器 ,用来做权限校验-->
 <mvc:interceptors>
       <mvc:interceptor>
            <mvc:mapping path="/**" />
            <bean class="com.kyle.a_system.PermissionInterceptor"/>
       </mvc:interceptor>
 </mvc:interceptors>

</beans>
